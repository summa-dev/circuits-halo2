pub use evm_address_verifier::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod evm_address_verifier {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"getAddressType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"cexAddress\",\"type\":\"bytes\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"addressOwnershipProof\",\"type\":\"bytes\",\"components\":[]}],\"stateMutability\":\"pure\",\"type\":\"function\",\"name\":\"verifyAddressOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]}]";
    ///The parsed JSON ABI of the contract.
    pub static EVMADDRESSVERIFIER_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        5,
        113,
        128,
        97,
        0,
        32,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        54,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        41,
        172,
        194,
        213,
        20,
        97,
        0,
        59,
        87,
        128,
        99,
        249,
        242,
        7,
        239,
        20,
        97,
        0,
        99,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        78,
        97,
        0,
        73,
        54,
        96,
        4,
        97,
        4,
        145,
        86,
        91,
        97,
        0,
        145,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        64,
        81,
        127,
        156,
        115,
        202,
        164,
        39,
        220,
        199,
        163,
        186,
        50,
        29,
        217,
        236,
        147,
        148,
        55,
        88,
        80,
        43,
        152,
        39,
        134,
        101,
        132,
        33,
        253,
        30,
        9,
        75,
        242,
        181,
        243,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        90,
        86,
        91,
        96,
        0,
        128,
        131,
        128,
        96,
        32,
        1,
        144,
        81,
        129,
        1,
        144,
        97,
        0,
        168,
        145,
        144,
        97,
        4,
        245,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        1,
        86,
        132,
        97,
        1,
        80,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        1,
        7,
        144,
        96,
        32,
        128,
        130,
        82,
        96,
        42,
        144,
        130,
        1,
        82,
        127,
        83,
        117,
        109,
        109,
        97,
        32,
        112,
        114,
        111,
        111,
        102,
        32,
        111,
        102,
        32,
        115,
        111,
        108,
        118,
        101,
        110,
        99,
        121,
        32,
        102,
        111,
        114,
        32,
        67,
        114,
        121,
        112,
        96,
        64,
        130,
        1,
        82,
        105,
        116,
        111,
        69,
        120,
        99,
        104,
        97,
        110,
        103,
        101,
        96,
        176,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        128,
        81,
        144,
        96,
        32,
        1,
        32,
        127,
        25,
        69,
        116,
        104,
        101,
        114,
        101,
        117,
        109,
        32,
        83,
        105,
        103,
        110,
        101,
        100,
        32,
        77,
        101,
        115,
        115,
        97,
        103,
        101,
        58,
        10,
        51,
        50,
        0,
        0,
        0,
        0,
        96,
        0,
        144,
        129,
        82,
        96,
        28,
        145,
        144,
        145,
        82,
        96,
        60,
        144,
        32,
        144,
        86,
        91,
        144,
        97,
        1,
        111,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        131,
        22,
        146,
        22,
        145,
        144,
        145,
        20,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        97,
        1,
        126,
        133,
        133,
        97,
        1,
        147,
        86,
        91,
        145,
        80,
        145,
        80,
        97,
        1,
        139,
        129,
        97,
        1,
        216,
        86,
        91,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        130,
        81,
        96,
        65,
        3,
        97,
        1,
        201,
        87,
        96,
        32,
        131,
        1,
        81,
        96,
        64,
        132,
        1,
        81,
        96,
        96,
        133,
        1,
        81,
        96,
        0,
        26,
        97,
        1,
        189,
        135,
        130,
        133,
        133,
        97,
        3,
        42,
        86,
        91,
        148,
        80,
        148,
        80,
        80,
        80,
        80,
        97,
        1,
        209,
        86,
        91,
        80,
        96,
        0,
        144,
        80,
        96,
        2,
        91,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        1,
        236,
        87,
        97,
        1,
        236,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        1,
        244,
        87,
        80,
        86,
        91,
        96,
        1,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        2,
        8,
        87,
        97,
        2,
        8,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        2,
        90,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        24,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        67,
        68,
        83,
        65,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        2,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        2,
        110,
        87,
        97,
        2,
        110,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        2,
        187,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        31,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        67,
        68,
        83,
        65,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        2,
        81,
        86,
        91,
        96,
        3,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        2,
        207,
        87,
        97,
        2,
        207,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        3,
        39,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        67,
        68,
        83,
        65,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        32,
        39,
        115,
        39,
        32,
        118,
        97,
        108,
        96,
        68,
        130,
        1,
        82,
        97,
        117,
        101,
        96,
        240,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        81,
        86,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        127,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        93,
        87,
        110,
        115,
        87,
        164,
        80,
        29,
        223,
        233,
        47,
        70,
        104,
        27,
        32,
        160,
        131,
        17,
        21,
        97,
        3,
        97,
        87,
        80,
        96,
        0,
        144,
        80,
        96,
        3,
        97,
        3,
        229,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        0,
        128,
        130,
        82,
        96,
        32,
        130,
        1,
        128,
        132,
        82,
        137,
        144,
        82,
        96,
        255,
        136,
        22,
        146,
        130,
        1,
        146,
        144,
        146,
        82,
        96,
        96,
        129,
        1,
        134,
        144,
        82,
        96,
        128,
        129,
        1,
        133,
        144,
        82,
        96,
        1,
        144,
        96,
        160,
        1,
        96,
        32,
        96,
        64,
        81,
        96,
        32,
        129,
        3,
        144,
        128,
        132,
        3,
        144,
        133,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        181,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        96,
        64,
        81,
        96,
        31,
        25,
        1,
        81,
        145,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        97,
        3,
        222,
        87,
        96,
        0,
        96,
        1,
        146,
        80,
        146,
        80,
        80,
        97,
        3,
        229,
        86,
        91,
        145,
        80,
        96,
        0,
        144,
        80,
        91,
        148,
        80,
        148,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        96,
        31,
        131,
        1,
        18,
        97,
        4,
        21,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        4,
        48,
        87,
        97,
        4,
        48,
        97,
        3,
        238,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        131,
        1,
        96,
        31,
        25,
        144,
        129,
        22,
        96,
        63,
        1,
        22,
        129,
        1,
        144,
        130,
        130,
        17,
        129,
        131,
        16,
        23,
        21,
        97,
        4,
        88,
        87,
        97,
        4,
        88,
        97,
        3,
        238,
        86,
        91,
        129,
        96,
        64,
        82,
        131,
        129,
        82,
        134,
        96,
        32,
        133,
        136,
        1,
        1,
        17,
        21,
        97,
        4,
        113,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        96,
        32,
        135,
        1,
        96,
        32,
        131,
        1,
        55,
        96,
        0,
        96,
        32,
        133,
        131,
        1,
        1,
        82,
        128,
        148,
        80,
        80,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        4,
        164,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        4,
        188,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        4,
        200,
        134,
        131,
        135,
        1,
        97,
        4,
        4,
        86,
        91,
        147,
        80,
        96,
        32,
        133,
        1,
        53,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        4,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        235,
        133,
        130,
        134,
        1,
        97,
        4,
        4,
        86,
        91,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        7,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        5,
        30,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        155,
        61,
        40,
        38,
        206,
        167,
        97,
        183,
        34,
        11,
        18,
        112,
        209,
        168,
        70,
        114,
        252,
        46,
        112,
        228,
        194,
        71,
        194,
        130,
        205,
        200,
        187,
        210,
        13,
        228,
        58,
        68,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
    ];
    ///The bytecode of the contract.
    pub static EVMADDRESSVERIFIER_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        0,
        54,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        41,
        172,
        194,
        213,
        20,
        97,
        0,
        59,
        87,
        128,
        99,
        249,
        242,
        7,
        239,
        20,
        97,
        0,
        99,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        0,
        78,
        97,
        0,
        73,
        54,
        96,
        4,
        97,
        4,
        145,
        86,
        91,
        97,
        0,
        145,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        64,
        81,
        127,
        156,
        115,
        202,
        164,
        39,
        220,
        199,
        163,
        186,
        50,
        29,
        217,
        236,
        147,
        148,
        55,
        88,
        80,
        43,
        152,
        39,
        134,
        101,
        132,
        33,
        253,
        30,
        9,
        75,
        242,
        181,
        243,
        129,
        82,
        96,
        32,
        1,
        97,
        0,
        90,
        86,
        91,
        96,
        0,
        128,
        131,
        128,
        96,
        32,
        1,
        144,
        81,
        129,
        1,
        144,
        97,
        0,
        168,
        145,
        144,
        97,
        4,
        245,
        86,
        91,
        144,
        80,
        96,
        0,
        97,
        1,
        86,
        132,
        97,
        1,
        80,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        1,
        7,
        144,
        96,
        32,
        128,
        130,
        82,
        96,
        42,
        144,
        130,
        1,
        82,
        127,
        83,
        117,
        109,
        109,
        97,
        32,
        112,
        114,
        111,
        111,
        102,
        32,
        111,
        102,
        32,
        115,
        111,
        108,
        118,
        101,
        110,
        99,
        121,
        32,
        102,
        111,
        114,
        32,
        67,
        114,
        121,
        112,
        96,
        64,
        130,
        1,
        82,
        105,
        116,
        111,
        69,
        120,
        99,
        104,
        97,
        110,
        103,
        101,
        96,
        176,
        27,
        96,
        96,
        130,
        1,
        82,
        96,
        128,
        1,
        144,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        129,
        131,
        3,
        3,
        129,
        82,
        144,
        96,
        64,
        82,
        128,
        81,
        144,
        96,
        32,
        1,
        32,
        127,
        25,
        69,
        116,
        104,
        101,
        114,
        101,
        117,
        109,
        32,
        83,
        105,
        103,
        110,
        101,
        100,
        32,
        77,
        101,
        115,
        115,
        97,
        103,
        101,
        58,
        10,
        51,
        50,
        0,
        0,
        0,
        0,
        96,
        0,
        144,
        129,
        82,
        96,
        28,
        145,
        144,
        145,
        82,
        96,
        60,
        144,
        32,
        144,
        86,
        91,
        144,
        97,
        1,
        111,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        146,
        131,
        22,
        146,
        22,
        145,
        144,
        145,
        20,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        97,
        1,
        126,
        133,
        133,
        97,
        1,
        147,
        86,
        91,
        145,
        80,
        145,
        80,
        97,
        1,
        139,
        129,
        97,
        1,
        216,
        86,
        91,
        80,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        130,
        81,
        96,
        65,
        3,
        97,
        1,
        201,
        87,
        96,
        32,
        131,
        1,
        81,
        96,
        64,
        132,
        1,
        81,
        96,
        96,
        133,
        1,
        81,
        96,
        0,
        26,
        97,
        1,
        189,
        135,
        130,
        133,
        133,
        97,
        3,
        42,
        86,
        91,
        148,
        80,
        148,
        80,
        80,
        80,
        80,
        97,
        1,
        209,
        86,
        91,
        80,
        96,
        0,
        144,
        80,
        96,
        2,
        91,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        1,
        236,
        87,
        97,
        1,
        236,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        1,
        244,
        87,
        80,
        86,
        91,
        96,
        1,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        2,
        8,
        87,
        97,
        2,
        8,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        2,
        90,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        24,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        67,
        68,
        83,
        65,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        2,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        2,
        110,
        87,
        97,
        2,
        110,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        2,
        187,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        31,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        67,
        68,
        83,
        65,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        0,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        2,
        81,
        86,
        91,
        96,
        3,
        129,
        96,
        4,
        129,
        17,
        21,
        97,
        2,
        207,
        87,
        97,
        2,
        207,
        97,
        5,
        37,
        86,
        91,
        3,
        97,
        3,
        39,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        34,
        96,
        36,
        130,
        1,
        82,
        127,
        69,
        67,
        68,
        83,
        65,
        58,
        32,
        105,
        110,
        118,
        97,
        108,
        105,
        100,
        32,
        115,
        105,
        103,
        110,
        97,
        116,
        117,
        114,
        101,
        32,
        39,
        115,
        39,
        32,
        118,
        97,
        108,
        96,
        68,
        130,
        1,
        82,
        97,
        117,
        101,
        96,
        240,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        97,
        2,
        81,
        86,
        91,
        80,
        86,
        91,
        96,
        0,
        128,
        127,
        127,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        93,
        87,
        110,
        115,
        87,
        164,
        80,
        29,
        223,
        233,
        47,
        70,
        104,
        27,
        32,
        160,
        131,
        17,
        21,
        97,
        3,
        97,
        87,
        80,
        96,
        0,
        144,
        80,
        96,
        3,
        97,
        3,
        229,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        0,
        128,
        130,
        82,
        96,
        32,
        130,
        1,
        128,
        132,
        82,
        137,
        144,
        82,
        96,
        255,
        136,
        22,
        146,
        130,
        1,
        146,
        144,
        146,
        82,
        96,
        96,
        129,
        1,
        134,
        144,
        82,
        96,
        128,
        129,
        1,
        133,
        144,
        82,
        96,
        1,
        144,
        96,
        160,
        1,
        96,
        32,
        96,
        64,
        81,
        96,
        32,
        129,
        3,
        144,
        128,
        132,
        3,
        144,
        133,
        90,
        250,
        21,
        128,
        21,
        97,
        3,
        181,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        96,
        64,
        81,
        96,
        31,
        25,
        1,
        81,
        145,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        97,
        3,
        222,
        87,
        96,
        0,
        96,
        1,
        146,
        80,
        146,
        80,
        80,
        97,
        3,
        229,
        86,
        91,
        145,
        80,
        96,
        0,
        144,
        80,
        91,
        148,
        80,
        148,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        96,
        31,
        131,
        1,
        18,
        97,
        4,
        21,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        4,
        48,
        87,
        97,
        4,
        48,
        97,
        3,
        238,
        86,
        91,
        96,
        64,
        81,
        96,
        31,
        131,
        1,
        96,
        31,
        25,
        144,
        129,
        22,
        96,
        63,
        1,
        22,
        129,
        1,
        144,
        130,
        130,
        17,
        129,
        131,
        16,
        23,
        21,
        97,
        4,
        88,
        87,
        97,
        4,
        88,
        97,
        3,
        238,
        86,
        91,
        129,
        96,
        64,
        82,
        131,
        129,
        82,
        134,
        96,
        32,
        133,
        136,
        1,
        1,
        17,
        21,
        97,
        4,
        113,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        96,
        32,
        135,
        1,
        96,
        32,
        131,
        1,
        55,
        96,
        0,
        96,
        32,
        133,
        131,
        1,
        1,
        82,
        128,
        148,
        80,
        80,
        80,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        4,
        164,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        4,
        188,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        4,
        200,
        134,
        131,
        135,
        1,
        97,
        4,
        4,
        86,
        91,
        147,
        80,
        96,
        32,
        133,
        1,
        53,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        4,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        4,
        235,
        133,
        130,
        134,
        1,
        97,
        4,
        4,
        86,
        91,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        5,
        7,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        5,
        30,
        87,
        96,
        0,
        128,
        253,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        33,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        155,
        61,
        40,
        38,
        206,
        167,
        97,
        183,
        34,
        11,
        18,
        112,
        209,
        168,
        70,
        114,
        252,
        46,
        112,
        228,
        194,
        71,
        194,
        130,
        205,
        200,
        187,
        210,
        13,
        228,
        58,
        68,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        18,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static EVMADDRESSVERIFIER_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct EVMAddressVerifier<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for EVMAddressVerifier<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for EVMAddressVerifier<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for EVMAddressVerifier<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for EVMAddressVerifier<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(EVMAddressVerifier)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> EVMAddressVerifier<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    EVMADDRESSVERIFIER_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                EVMADDRESSVERIFIER_ABI.clone(),
                EVMADDRESSVERIFIER_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `getAddressType` (0xf9f207ef) function
        pub fn get_address_type(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([249, 242, 7, 239], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `verifyAddressOwnership` (0x29acc2d5) function
        pub fn verify_address_ownership(
            &self,
            cex_address: ::ethers::core::types::Bytes,
            address_ownership_proof: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([41, 172, 194, 213], (cex_address, address_ownership_proof))
                .expect("method not found (this should never happen)")
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for EVMAddressVerifier<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Container type for all input parameters for the `getAddressType` function with signature `getAddressType()` and selector `0xf9f207ef`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getAddressType", abi = "getAddressType()")]
    pub struct GetAddressTypeCall;
    ///Container type for all input parameters for the `verifyAddressOwnership` function with signature `verifyAddressOwnership(bytes,bytes)` and selector `0x29acc2d5`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "verifyAddressOwnership",
        abi = "verifyAddressOwnership(bytes,bytes)"
    )]
    pub struct VerifyAddressOwnershipCall {
        pub cex_address: ::ethers::core::types::Bytes,
        pub address_ownership_proof: ::ethers::core::types::Bytes,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum EVMAddressVerifierCalls {
        GetAddressType(GetAddressTypeCall),
        VerifyAddressOwnership(VerifyAddressOwnershipCall),
    }
    impl ::ethers::core::abi::AbiDecode for EVMAddressVerifierCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <GetAddressTypeCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetAddressType(decoded));
            }
            if let Ok(decoded)
                = <VerifyAddressOwnershipCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::VerifyAddressOwnership(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for EVMAddressVerifierCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::GetAddressType(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::VerifyAddressOwnership(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for EVMAddressVerifierCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::GetAddressType(element) => ::core::fmt::Display::fmt(element, f),
                Self::VerifyAddressOwnership(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<GetAddressTypeCall> for EVMAddressVerifierCalls {
        fn from(value: GetAddressTypeCall) -> Self {
            Self::GetAddressType(value)
        }
    }
    impl ::core::convert::From<VerifyAddressOwnershipCall> for EVMAddressVerifierCalls {
        fn from(value: VerifyAddressOwnershipCall) -> Self {
            Self::VerifyAddressOwnership(value)
        }
    }
    ///Container type for all return fields from the `getAddressType` function with signature `getAddressType()` and selector `0xf9f207ef`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetAddressTypeReturn(pub [u8; 32]);
    ///Container type for all return fields from the `verifyAddressOwnership` function with signature `verifyAddressOwnership(bytes,bytes)` and selector `0x29acc2d5`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct VerifyAddressOwnershipReturn(pub bool);
}
